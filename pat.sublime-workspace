{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "Package Control Messages\n========================\n\nSublimeCodeIntel\n----------------\n\n  SublimeCodeIntel\n  ================\n  \n   ____        _     _ _                 ____          _      ___       _       _\n  / ___| _   _| |__ | (_)_ __ ___   ___ / ___|___   __| | ___|_ _|_ __ | |_ ___| |\n  \\___ \\| | | | '_ \\| | | '_ ` _ \\ / _ \\ |   / _ \\ / _` |/ _ \\| || '_ \\| __/ _ \\ |\n   ___) | |_| | |_) | | | | | | | |  __/ |__| (_) | (_| |  __/| || | | | ||  __/ |\n  |____/ \\__,_|_.__/|_|_|_| |_| |_|\\___|\\____\\___/ \\__,_|\\___|___|_| |_|\\__\\___|_|\n  A full-featured code intelligence and smart autocomplete engine for Sublime Text.\n     (Code intelligence plugin ported from Open Komodo Editor to Sublime Text)\n  \n  \n  +-------------------------------- HELP WANTED ---------------------------------+\n  |     Maintaining this project is hard, I do it in my spare time, but I'm      |\n  |     basically all alone. If anyone is interested in contributing, please     |\n  |     contact me. I really need much more help maintaining SublimeCodeIntel    |\n  |                                                                              |\n  |                       Follow me on twitter @germbravo                        |\n  |           You can find us at #sublimecodeintel on irc.freenode.net           |\n  |                                                                              |\n  |             If you like SublimeCodeIntel, please make a donation:            |\n  |        http://sublimecodeintel.github.io/SublimeCodeIntel/donate.html        |\n  +------------------------------------------------------------------------------+\n  \n  \n  Features\n  --------\n  \n  Supports all the languages Komodo Editor supports for Code Intelligence (CIX, CodeIntel2):\n  \n  JavaScript, Mason, XBL, XUL, RHTML, SCSS, Python, HTML, Ruby, Python3, XML, Sass, XSLT, Django, HTML5, Perl, CSS, Twig, Less, Smarty, Node.js, Tcl, TemplateToolkit, PHP.\n  \n  \n  Provides the following features:\n  \n  * Jump to Symbol Definition - Jump to the file and line of the definition of a symbol.\n  * Imports autocomplete - Shows autocomplete with the available modules/symbols in real time.\n  * Function Call tooltips - Displays information in the status bar about the working function.\n  \n  \n  + Shortcuts for jump to definition have changed:\n  \n    For Mac OS X:\n      * Jump to definition = ``Control+Click``\n      * Jump to definition = ``Control+Command+Alt+Up``\n      * Go back = ``Control+Command+Alt+Left``\n      * Manual CodeIntel = ``Control+Shift+space``\n  \n    For Linux:\n      * Jump to definition = ``Super+Click``\n      * Jump to definition = ``Control+Super+Alt+Up``\n      * Go back = ``Control+Super+Alt+Left``\n      * Manual CodeIntel = ``Control+Shift+space``\n  \n    For Windows:\n      * Jump to definition = ``Alt+Click``\n      * Jump to definition = ``Control+Windows+Alt+Up``\n      * Go back = ``Control+Windows+Alt+Left``\n      * Manual CodeIntel = ``Control+Shift+space``\n  \n  \n  \n  Notes\n  -----\n  \n  ** Restart Sublime Text after reading this **\n  \n  \n  More information\n  ----------------\n  Please take the time to read the documentation:\n  \n  In case of trouble, please read the Troubleshooting section in the README.\n  \n  * Online - http://sublimecodeintel.github.io/SublimeCodeIntel/\n  * Git - https://github.com/SublimeCodeIntel/SublimeCodeIntel\n  \n  \n  IMPORTANT\n  ---------\n  \n  Do NOT edit the default SublimeCodeIntel settings. Your changes will be lost\n  when SublimeCodeIntel is updated. ALWAYS edit the user SublimeCodeIntel settings\n  by selecting \"Preferences->Package Settings->SublimeCodeIntel->Settings - User\".\n  Note that individual settings you include in your user settings will **completely**\n  replace the corresponding default setting, so you must provide that setting in its entirety.\n",
			"settings":
			{
				"buffer_size": 3795,
				"line_ending": "Windows",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"file": "routes/api.php",
			"settings":
			{
				"buffer_size": 6347,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Tag;\nuse Illuminate\\Support\\Facades\\DB;\nuse Illuminate\\Http\\Request;\n\nclass TagController extends Controller\n{\n    public function __construct()\n    {\n        $this->middleware('jwt.verify')->except(['list','search','getById']);\n    }\n\n    /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function list(Request $request)\n    {\n        $limit = ($request->has('limit')) ? $request->query('limit'): 15;\n        $page = ($request->has('page')) ? $request->query('page'): 1;\n\n        $tags = DB::table('tags')\n                    ->select(['id','name','searched'])\n                    ->paginate($limit);\n\n        $tags->setPath(\"/tags?limit={$limit}\");\n        \n        return response()->json([\n                'success'=> true,\n                'title'=> 'Lista de tags',\n                'paginator' => $tags,\n                'page'=> $tags->currentPage(),\n                'limit' => $tags->perPage()\n            ]);\n    }\n\n    /**\n     * Show the form for creating a new resource\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create(Request $request)\n    {\n        $name = $request->get('name');\n        \n        $id = DB::table('tags')->insertGetId([\n                'name' => $name\n            ]);\n        \n        return response()->json([\n                'menssage' => \"Tag - {$name} - adicionada com sucesso\",\n                'id' => $id\n            ]);\n    }\n\n    \n    /**\n     * Update the specified resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\App\\Tag  $tag\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, $id)\n    {\n        $name = ($request->has('name')) ? $request->get('name'): false;\n        $is_update = false;\n        if ($name) {\n            $is_update = DB::table('tags')\n                ->where('id', $id)\n                ->update(['name' => $name]);\n        }\n\n        return response()->json([\n            'message' => \"Nome de tag: {$name} mudado com sucesso\",\n            'is_update' => $is_update\n        ]);\n    }\n\n    public function incrementSearchTag($id)\n    {\n        return DB::table('tags')->where('id', $id)\n                                ->increment('searched', 1);\n    }\n\n    public function search(Request $request, $termo)\n    {\n        $limit = $request->query('limit', 15);\n        $page = $request->query('page', 1);\n\n        $tags = DB::table('tags')\n                    ->select(['id','name'])\n                    ->where(DB::raw('unaccent(lower(name))'), 'ILIKE', DB::raw(\"unaccent(lower('%{$termo}%'))\"))\n                    ->paginate($limit);\n        \n        $tags->setPath(\"/tags/search/{$termo}?limit={$limit}\");\n\n        return response()->json([\n            'success'=> true,\n            'message' => 'Resultados da busca',\n            'paginator' => $tags,\n            'page'=> $tags->currentPage(),\n            'limit' => $tags->perPage()\n        ]);\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     *\n     * @param  \\App\\Tag  $tag\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function delete($id)\n    {\n        if ($id) {\n            DB::table('tags')->where('id', '=', $id)->delete();\n        }\n\n        return response()->json([\n            'success' => true\n        ]);\n    }\n\n    public function getById($id){\n        $tag = Tag::where('id',$id);\n\n        $this->incrementSearchTag($id);\n        \n        return response()->json([\n            'success' => true,\n            'tag' => $tag\n        ]);\n    }\n}\n",
			"file": "app/Http/Controllers/TagController.php",
			"file_size": 3590,
			"file_write_time": 131869218873610738,
			"settings":
			{
				"buffer_size": 3639,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 62.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/xampp/htdocs/plataforma-anisio-teixeira",
		"/C/xampp/htdocs/plataforma-anisio-teixeira/app",
		"/C/xampp/htdocs/plataforma-anisio-teixeira/app/Http",
		"/C/xampp/htdocs/plataforma-anisio-teixeira/app/Http/Controllers",
		"/C/xampp/htdocs/plataforma-anisio-teixeira/routes"
	],
	"file_history":
	[
		"/C/xampp/htdocs/plataforma-anisio-teixeira/app/Conteudo.php"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3795,
						"regions":
						{
						},
						"selection":
						[
							[
								3795,
								3795
							]
						],
						"settings":
						{
							"auto_indent": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_width": 2,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 648.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "routes/api.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6347,
						"regions":
						{
						},
						"selection":
						[
							[
								2119,
								2119
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 756.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app/Http/Controllers/TagController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3639,
						"regions":
						{
						},
						"selection":
						[
							[
								3527,
								3527
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2808.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "pat.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 239.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
